
The OLD W function (Gaussian):

# Function to calculate size-dependent crowding, assuming no overlap
wrij=function(r,i,j) {
   return(2*pi*integrate(function(z) z*exp(-alpha[i,j]*(z^2))*Cr[[j]](z-r), r, r + r.U[j])$value
     + pi*Ctot[j]*exp(-alpha[i,j]*((r+r.U[j])^2))/alpha[i,j]); 	
}
Wrij=Vectorize(wrij,vectorize.args="r")

My attempt at a new function incorporating our spline-based kernel:

Wfuns is a list with four elements, correspinding to the four species. So,
Wfuns[[1]](c(1:5))
gives the distance-weighting for ARTR neighbors at distances 1:5. The function
returns:
1.000000 1.000000 1.000000 0.513915 0.027830

Putting this in your wrij function:

# Function to calculate size-dependent crowding, assuming no overlap
wrij=function(r,i,j) {
   return(2*pi*integrate(function(z) z*Wfuns[[j]](z)*Cr[[j]](z-r), r, r + r.U[j])$value
     + pi*Ctot[j]*Wfuns[[j]](r+r.U[j])....but what about this next bit ??? /alpha[i,j]); 	
}
Wrij=Vectorize(wrij,vectorize.args="r")

