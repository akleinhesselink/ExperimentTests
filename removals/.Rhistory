}
setwd("..")
head(Rdata)
sppList <-  c("ARTR","HECO","POSE","PSSP")
source("ibm/get_W_functions.r")  # get neighbor distance decay functions
#no treatment effects, all species
init.species <- c(1:4)
tlimit <- 2500
burn.in <- 500
trtEffects=F
#============================================================
# SIMULATION PARAMETERS
#============================================================
A=10000 #Area of 100cm x 100cm quadrat
sppList=c("ARTR","HECO","POSE","PSSP")
bigM=c(75,75,50,50)     #Set matrix dimension for each species
maxSize=c(3000,202,260,225)    # in cm^2: PSSP=225 HECO=202  POSE=260  ARTR=3000  # minSize=0.2  cm^2
Nyrs=30
doGroup=NA  # NA for spatial avg., values 1-6 for a specific group
# import parameters
# recruitment parameters
Rpars=list(intcpt.mu=rep(0,Nspp),intcpt.yr=matrix(0,Nyrs,Nspp),intcpt.trt=matrix(0,3,Nspp),intcpt.tau=rep(100,Nspp),
intcpt.gr=matrix(NA,6,Nspp),g.tau=rep(NA,Nspp),
dd=matrix(NA,Nspp,Nspp),theta=rep(NA,Nspp),sizeMean=rep(NA,Nspp),sizeVar=rep(NA,Nspp),
recSizes=list(1))
#   if(trtEffects==T){
infile=paste0("recruitment/recruit_params_m1.csv")
#   }else{
#     infile=paste0("recruitment/recruit_params_m0.csv")
#   }
Rdata=read.csv(infile)
# subset out non-essential parameters
tmp=c(grep("lambda",row.names(Rdata)),grep("deviance",row.names(Rdata)),
grep("DIC",row.names(Rdata)))
Rdata=Rdata[-tmp,]
# format parameters
tmp=paste("Rpars$",row.names(Rdata),"<-",Rdata[,1],sep="")
eval(parse(n=dim(Rdata)[1],text=tmp))
for(i in 1:Nspp){
infile=paste(root,"/driversdata/data/idaho/speciesData/",sppList[i],"/recSize.csv",sep="")
recSize=read.csv(infile)
Rpars$sizeMean[i]=mean(log(recSize$area))
Rpars$sizeVar[i]=var(log(recSize$area))
#Rpars$recSizes[[i]]=recSize$area
}
Rpars$dd=t(Rpars$dd) # c[i,j] = effect of j on i
Nspp=length(sppList)
# import parameters
# recruitment parameters
Rpars=list(intcpt.mu=rep(0,Nspp),intcpt.yr=matrix(0,Nyrs,Nspp),intcpt.trt=matrix(0,3,Nspp),intcpt.tau=rep(100,Nspp),
intcpt.gr=matrix(NA,6,Nspp),g.tau=rep(NA,Nspp),
dd=matrix(NA,Nspp,Nspp),theta=rep(NA,Nspp),sizeMean=rep(NA,Nspp),sizeVar=rep(NA,Nspp),
recSizes=list(1))
#   if(trtEffects==T){
infile=paste0("recruitment/recruit_params_m1.csv")
#   }else{
#     infile=paste0("recruitment/recruit_params_m0.csv")
#   }
Rdata=read.csv(infile)
# subset out non-essential parameters
tmp=c(grep("lambda",row.names(Rdata)),grep("deviance",row.names(Rdata)),
grep("DIC",row.names(Rdata)))
Rdata=Rdata[-tmp,]
# format parameters
tmp=paste("Rpars$",row.names(Rdata),"<-",Rdata[,1],sep="")
eval(parse(n=dim(Rdata)[1],text=tmp))
for(i in 1:Nspp){
infile=paste(root,"/driversdata/data/idaho/speciesData/",sppList[i],"/recSize.csv",sep="")
recSize=read.csv(infile)
Rpars$sizeMean[i]=mean(log(recSize$area))
Rpars$sizeVar[i]=var(log(recSize$area))
#Rpars$recSizes[[i]]=recSize$area
}
Rpars$dd=t(Rpars$dd) # c[i,j] = effect of j on i
head(Rdata)
Rpars
row.names(Rdata)
keep <- grep("intcpt.trt",row.names(Rdata))
keep
tmp <- Rdata[keep,]
tmp
tmp <- Rdata[keep,c("X2.5","X97.5")]
tmp
tmp <- Rdata[keep,c("X2.5.","X97.5.")]
tmp
j <- apply(abs(tmp),MARGIN=2,FUN=max)
j
j <- apply(abs(tmp),MARGIN=1,FUN=max)
j
tmp$max <- ifelse(abs(tmp$X2.5.)>abs(tmp$X97.5.),tmp$X2.5.,tmp$X97.5.)
tmp
Rpars$intcpt.trt[2,2] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,2]")]
# import parameters
# recruitment parameters
Rpars=list(intcpt.mu=rep(0,Nspp),intcpt.yr=matrix(0,Nyrs,Nspp),intcpt.trt=matrix(0,3,Nspp),intcpt.tau=rep(100,Nspp),
intcpt.gr=matrix(NA,6,Nspp),g.tau=rep(NA,Nspp),
dd=matrix(NA,Nspp,Nspp),theta=rep(NA,Nspp),sizeMean=rep(NA,Nspp),sizeVar=rep(NA,Nspp),
recSizes=list(1))
#   if(trtEffects==T){
infile=paste0("recruitment/recruit_params_m1.csv")
#   }else{
#     infile=paste0("recruitment/recruit_params_m0.csv")
#   }
Rdata=read.csv(infile)
# subset out non-essential parameters
tmp=c(grep("lambda",row.names(Rdata)),grep("deviance",row.names(Rdata)),
grep("DIC",row.names(Rdata)))
Rdata=Rdata[-tmp,]
# format parameters
tmp=paste("Rpars$",row.names(Rdata),"<-",Rdata[,1],sep="")
eval(parse(n=dim(Rdata)[1],text=tmp))
for(i in 1:Nspp){
infile=paste(root,"/driversdata/data/idaho/speciesData/",sppList[i],"/recSize.csv",sep="")
recSize=read.csv(infile)
Rpars$sizeMean[i]=mean(log(recSize$area))
Rpars$sizeVar[i]=var(log(recSize$area))
#Rpars$recSizes[[i]]=recSize$area
}
Rpars$dd=t(Rpars$dd) # c[i,j] = effect of j on i
# get edge of confidence interval for treatment effects
if(max.CI==T){
keep <- grep("intcpt.trt",row.names(Rdata))
tmp <- Rdata[keep,c("X2.5.","X97.5.")]
tmp$max <- ifelse(abs(tmp$X2.5.)>abs(tmp$X97.5.),tmp$X2.5.,tmp$X97.5.)
Rpars$intcpt.trt[2,2] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,2]")]
Rpars$intcpt.trt[2,3] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,3]")]
Rpars$intcpt.trt[2,4] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,4]")]
Rpars$intcpt.trt[3,1] <- tmp$max[which(row.names(tmp)=="intcpt.trt[3,1]")]
}
# reformat treatment effects
if(trtEffects==F){
Rpars$intcpt.trt <- rep(0,4)
}else{
Rpars$intcpt.trt <- c(Rpars$intcpt.trt[3,1], # ARTR in no_grass
Rpars$intcpt.trt[2,2:4])   # grasses in no_shrub
}
rm(Rdata)
Rpars
trtEffects=T
# import parameters
# recruitment parameters
Rpars=list(intcpt.mu=rep(0,Nspp),intcpt.yr=matrix(0,Nyrs,Nspp),intcpt.trt=matrix(0,3,Nspp),intcpt.tau=rep(100,Nspp),
intcpt.gr=matrix(NA,6,Nspp),g.tau=rep(NA,Nspp),
dd=matrix(NA,Nspp,Nspp),theta=rep(NA,Nspp),sizeMean=rep(NA,Nspp),sizeVar=rep(NA,Nspp),
recSizes=list(1))
#   if(trtEffects==T){
infile=paste0("recruitment/recruit_params_m1.csv")
#   }else{
#     infile=paste0("recruitment/recruit_params_m0.csv")
#   }
Rdata=read.csv(infile)
# subset out non-essential parameters
tmp=c(grep("lambda",row.names(Rdata)),grep("deviance",row.names(Rdata)),
grep("DIC",row.names(Rdata)))
Rdata=Rdata[-tmp,]
# format parameters
tmp=paste("Rpars$",row.names(Rdata),"<-",Rdata[,1],sep="")
eval(parse(n=dim(Rdata)[1],text=tmp))
for(i in 1:Nspp){
infile=paste(root,"/driversdata/data/idaho/speciesData/",sppList[i],"/recSize.csv",sep="")
recSize=read.csv(infile)
Rpars$sizeMean[i]=mean(log(recSize$area))
Rpars$sizeVar[i]=var(log(recSize$area))
#Rpars$recSizes[[i]]=recSize$area
}
Rpars$dd=t(Rpars$dd) # c[i,j] = effect of j on i
# get edge of confidence interval for treatment effects
if(max.CI==T){
keep <- grep("intcpt.trt",row.names(Rdata))
tmp <- Rdata[keep,c("X2.5.","X97.5.")]
tmp$max <- ifelse(abs(tmp$X2.5.)>abs(tmp$X97.5.),tmp$X2.5.,tmp$X97.5.)
Rpars$intcpt.trt[2,2] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,2]")]
Rpars$intcpt.trt[2,3] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,3]")]
Rpars$intcpt.trt[2,4] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,4]")]
Rpars$intcpt.trt[3,1] <- tmp$max[which(row.names(tmp)=="intcpt.trt[3,1]")]
}
# reformat treatment effects
if(trtEffects==F){
Rpars$intcpt.trt <- rep(0,4)
}else{
Rpars$intcpt.trt <- c(Rpars$intcpt.trt[3,1], # ARTR in no_grass
Rpars$intcpt.trt[2,2:4])   # grasses in no_shrub
}
rm(Rdata)
Rpars
max.CI
max.CI <- T  # TRUE means use maximum removal effect
# import parameters
# recruitment parameters
Rpars=list(intcpt.mu=rep(0,Nspp),intcpt.yr=matrix(0,Nyrs,Nspp),intcpt.trt=matrix(0,3,Nspp),intcpt.tau=rep(100,Nspp),
intcpt.gr=matrix(NA,6,Nspp),g.tau=rep(NA,Nspp),
dd=matrix(NA,Nspp,Nspp),theta=rep(NA,Nspp),sizeMean=rep(NA,Nspp),sizeVar=rep(NA,Nspp),
recSizes=list(1))
#   if(trtEffects==T){
infile=paste0("recruitment/recruit_params_m1.csv")
#   }else{
#     infile=paste0("recruitment/recruit_params_m0.csv")
#   }
Rdata=read.csv(infile)
# subset out non-essential parameters
tmp=c(grep("lambda",row.names(Rdata)),grep("deviance",row.names(Rdata)),
grep("DIC",row.names(Rdata)))
Rdata=Rdata[-tmp,]
# format parameters
tmp=paste("Rpars$",row.names(Rdata),"<-",Rdata[,1],sep="")
eval(parse(n=dim(Rdata)[1],text=tmp))
for(i in 1:Nspp){
infile=paste(root,"/driversdata/data/idaho/speciesData/",sppList[i],"/recSize.csv",sep="")
recSize=read.csv(infile)
Rpars$sizeMean[i]=mean(log(recSize$area))
Rpars$sizeVar[i]=var(log(recSize$area))
#Rpars$recSizes[[i]]=recSize$area
}
Rpars$dd=t(Rpars$dd) # c[i,j] = effect of j on i
# get edge of confidence interval for treatment effects
if(max.CI==T){
keep <- grep("intcpt.trt",row.names(Rdata))
tmp <- Rdata[keep,c("X2.5.","X97.5.")]
tmp$max <- ifelse(abs(tmp$X2.5.)>abs(tmp$X97.5.),tmp$X2.5.,tmp$X97.5.)
Rpars$intcpt.trt[2,2] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,2]")]
Rpars$intcpt.trt[2,3] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,3]")]
Rpars$intcpt.trt[2,4] <- tmp$max[which(row.names(tmp)=="intcpt.trt[2,4]")]
Rpars$intcpt.trt[3,1] <- tmp$max[which(row.names(tmp)=="intcpt.trt[3,1]")]
}
# reformat treatment effects
if(trtEffects==F){
Rpars$intcpt.trt <- rep(0,4)
}else{
Rpars$intcpt.trt <- c(Rpars$intcpt.trt[3,1], # ARTR in no_grass
Rpars$intcpt.trt[2,2:4])   # grasses in no_shrub
}
rm(Rdata)
Rpars
source('C:/Repos/ExperimentTests/removals/growth/import2ipm_noOverlap.r', echo=TRUE)
head(Gdata)
max.CI <- T  # TRUE means use maximum removal effect
sppList <-  c("ARTR","HECO","POSE","PSSP")
source("ibm/get_W_functions.r")  # get neighbor distance decay functions
getwd()
source("ibm/get_W_functions.r")  # get neighbor distance decay functions
#no treatment effects, all species
init.species <- c(1:4)
tlimit <- 2500
burn.in <- 500
# removal treatment effects, ARTR removal
init.species <- c(2:4)
trtEffects=T
max.CI=T
source("ipm/IPM-setup.r")
source("ipm/IPM-getEquilibrium.r")
simResults <- rbind(meanCover1,meanCover2,meanCover3,meanCover4)
colnames(simResults) <- sppList
write.csv(simResults,"ipm/simResults-meanCover.csv",row.names=F)
max.CI <- F  # TRUE means use maximum removal effect
sppList <-  c("ARTR","HECO","POSE","PSSP")
source("ibm/get_W_functions.r")  # get neighbor distance decay functions
#no treatment effects, all species
init.species <- c(1:4)
tlimit <- 2500
burn.in <- 500
trtEffects=F
source("ipm/IPM-setup.r")
source("ipm/IPM-getEquilibrium.r")
write.csv(covSave[(burn.in+1):tlimit,],"ipm/baselineCover.csv",row.names=F)
meanCover1 <- meanCover
#no treatment effects, ARTR removal
init.species <- c(2:4)
source("ipm/IPM-getEquilibrium.r")
write.csv(covSave[(burn.in+1):tlimit,],"ipm/baselineCover-noARTR.csv",row.names=F)
meanCover2 <- meanCover
# removal treatment effects, ARTR removal
init.species <- c(2:4)
trtEffects=T
max.CI=F
source("ipm/IPM-setup.r")
source("ipm/IPM-getEquilibrium.r")
write.csv(covSave[(burn.in+1):tlimit,],"ipm/removalCover-noARTR.csv",row.names=F)
meanCover3 <- meanCover
# removal treatment effects, ARTR removal, max treat effect
init.species <- c(2:4)
trtEffects=T
max.CI=T
source("ipm/IPM-setup.r")
source("ipm/IPM-getEquilibrium.r")
write.csv(covSave[(burn.in+1):tlimit,],"ipm/removalCover-noARTR-maxCI.csv",row.names=F)
meanCover4 <- meanCover
# # removal treatment effects, ARTR removal, no PSSP
# init.species <- c(2:3)
# trtEffects=T
# source("ipm/IPM-setup.r")
# source("ipm/IPM-getEquilibrium.r")
# write.csv(covSave[(burn.in+1):tlimit,],"ipm/removalCover-noARTRnoPSSP.csv",row.names=F)
# meanCover4 <- meanCover
simResults <- rbind(meanCover1,meanCover2,meanCover3)
colnames(simResults) <- sppList
write.csv(simResults,"ipm/simResults-meanCover.csv",row.names=F)
simResults <- rbind(meanCover1,meanCover2,meanCover4)
colnames(simResults) <- sppList
write.csv(simResults,"ipm/simResults-meanCover-maxCI.csv",row.names=F)
simFile <- "ipm/simResults-meanCover.csv"
source("ipm/IPM-figures.r")
source('C:/Repos/ExperimentTests/removals/ipm/IPM-figures.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/ipm/IPM-figures.r', echo=TRUE)
rm(list=ls())
source("ipm/IPM-figures.r")
simFile <- "ipm/simResults-meanCover.csv"
source("ipm/IPM-figures.r")
sppList <-  c("ARTR","HECO","POSE","PSSP")
simFile <- "ipm/simResults-meanCover.csv"
source("ipm/IPM-figures.r")
source('C:/Repos/ExperimentTests/removals/ipm/IPM-figures.r', echo=TRUE)
dev.off()
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=((2:5)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=((2:5)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
?boxplot
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=((2:5)+(doSpp-1)*4),names=rep("",4),xaxt="n".width=0.8)
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=((2:5)+(doSpp-1)*4),names=rep("",4),xaxt="n",width=0.8)
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=((2:5)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(0.5,4.5,1)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
seq(0.5,4.5,1)
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(1.5,4.5,1)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(1:4)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=10, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(1.5:4.5)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(3,7,11,15),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(1:4)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(2.5,6.5,10.5,14.5),labels=sppList)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(1:4)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(2.5,6.5,10.5,14.5),labels=sppList)
abline(v=4.5)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(1:4)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(2.5,6.5,10.5,14.5),labels=sppList)
abline(v=4.5);abline(v=8.5);abline(v=12.5)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9)
dev.off()
?legend
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(1:4)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(2.5,6.5,10.5,14.5),labels=sppList)
abline(v=4.5);abline(v=8.5);abline(v=12.5)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bty="n",cex=0.9,bg="white")
dev.off()
png("ipm/boxplots-maxCI.png",height=3.5, width=8, units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,4,1,1),cex.lab=1.2)
plot(c(1:17),rep(NA,17),ylim=c(0,10),ylab="Cover (%)",xlab="",xaxt="n")
for(doSpp in 1:4){
tmp <- cbind(baseline[,doSpp],baseline.noARTR[,doSpp],removal.noARTR[,doSpp],removal.noARTR.maxCI[,doSpp])
boxplot(100*tmp,col=c(myCols,"blue"),add=T, at=(seq(1:4)+(doSpp-1)*4),names=rep("",4),xaxt="n")
}
axis(side=1,at=c(2.5,6.5,10.5,14.5),labels=sppList)
abline(v=4.5);abline(v=8.5);abline(v=12.5)
legend("topright",c("Baseline model","Baseline model, no ARTR","Removal model, no ARTR","Removal model, no ARTR, max CI"),
fill=c(myCols,"blue"),bg="white",cex=0.9)
dev.off()
rm(list=ls())
sppList <-  c("ARTR","HECO","POSE","PSSP")
# read in distance weights
dists <- read.csv(paste0(root,"/driversdata/data/idaho_modern/speciesdata/IdahoModDistanceWeights_noExptl.csv"))
max.CI <- F  # TRUE means use maximum removal effect
source("ibm/ibm_removal_1step.r")
source("ibm/summarize_sims1step.r")
rm(list=ls(all=TRUE))
graphics.off();
root=ifelse(.Platform$OS.type=="windows","c:/Repos","~/repos"); # modify as needed
setwd(paste(root,"/ExperimentTests/removals/",sep="")); # modify as needed
sppList <-  c("ARTR","HECO","POSE","PSSP")
# read in distance weights
dists <- read.csv(paste0(root,"/driversdata/data/idaho_modern/speciesdata/IdahoModDistanceWeights_noExptl.csv"))
max.CI <- F  # TRUE means use maximum removal effect
source("ibm/ibm_removal_1step.r")
survive
# Predict survival and growth of each plant and recruitment in each quadrat*year
# PBA 5/25/2016
outfile="ibm/simulations1step/ObsPred_1step.csv"
# FORMAT PARAMETERS ------------------------------------------------
Nspp=length(sppList)
curDir <- getwd()
Nyrs <- 30
# set up survival parameters and function
source("survival/import2ibm_1step.r")
# set up growth parameters and function
source("growth/import2ibm_1step.r")
# set up recruitment parameters and function
source("recruitment/import2ibm_1step.r")
setwd(curDir)
source("ibm/ibm_removal_1step.r")
source("ibm/summarize_sims1step.r")
max.CI <- T  # TRUE means use maximum removal effect
source("ibm/ibm_removal_1step.r")
source("ibm/summarize_sims1step.r")
source("ipm/IPM-figures.r")
simFile <- "ipm/simResults-meanCover.csv"
source("ipm/IPM-figures.r")
