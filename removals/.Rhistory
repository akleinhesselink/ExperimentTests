# import modern data--------------------------------------------------------
D2 <- fetchGdat(doSpp=doSpp,speciesList=sppList,datadir=dataDir2,distWts=dists)
# merge in treatment data
tmp <- read.csv(paste(dataDir2,"/quad_info.csv",sep=""))
tmp <- tmp[,c("quad","Treatment")]
D2 <- merge(D2,tmp, all.x=T)
# account for removal in baseline years
if(doSpp!="ARTR"){
ii <- which(D2$year>=2011 & D2$Treatment=="No_shrub")
D2$W.ARTR[ii] <- 0
}else{
ii <- which(D2$year>=2011 & D2$Treatment=="No_grass")
D2$W.HECO[ii] <- 0 ; D2$W.POSE[ii] <- 0 ; D2$W.PSSP[ii] <- 0
}
# combine old and modern
allD <- rbind(D1,D2)
rm(D1,D2,tmp)
# merge data on removals at individual level
tmp <- read.csv(paste(dataDir2,"/speciesData/",doSpp,"/",doSpp,"_within_ARTRremovals.csv",sep=""))
tmp <- tmp[,c("quad","year","trackID","inARTR")]
allD<-merge(allD,tmp,all.x=T)
allD$inARTR[is.na(allD$inARTR)] <- 0
# clean up dataset ----------------------------------------------
allD$year[allD$year<2000] <- allD$year[allD$year<2000] + 1900
if(doSpp=="ARTR"){
keep <- which(is.element(allD$Treatment,c("Control","No_grass")))
}else{
keep <- which(is.element(allD$Treatment,c("Control","No_shrub")))
}
allD <- allD[keep,]
# remove outliers (large plants that obviously do not turn into tiny plants)
#########################################
#  2. Fit models
#########################################
library(lme4)
# set up indicator variables
allD$Treatment2 <- allD$Treatment
allD$Treatment2[allD$year>2000] <- "Modern"
allD$Treatment3 <- allD$Treatment
allD$Treatment3[allD$Treatment=="Control" & allD$year>2000] <- "ControlModern"
allD$year <- as.factor(allD$year)
# fit model without W.ARTR
m0 <- lmer(logarea.t1~logarea.t0+ W.HECO + W.POSE + W.PSSP+ W.allcov + W.allpts+
(1|Group)+(logarea.t0|year),data=allD)
# plot residuals vs W.ARTR
plot(allD$W.ARTR[allD$Treatment=="Control"],residuals(m0)[allD$Treatment=="Control"],
xlab="W.ARTR",ylab="Residuals")
abline(lm(residuals(m0)[allD$Treatment=="Control"]~allD$W.ARTR[allD$Treatment=="Control"]),lwd=2)
abline(h=0,lty="dashed",col="grey")
points(allD$W.ARTR[allD$Treatment=="No_shrub"],residuals(m0)[allD$Treatment=="No_shrub"],col="red")
points(0,mean(residuals(m0)[allD$Treatment=="No_shrub"]),pch=16,col="blue")
# call all scripts for removal experiment analysis
rm(list=ls(all=TRUE))
graphics.off();
root=ifelse(.Platform$OS.type=="windows","c:/Repos","~/repos"); # modify as needed
setwd(paste(root,"/ExperimentTests/removals/",sep="")); # modify as needed
# PBA March 2016
# call from removal_analysis_wrapper.r
#########################################
#  1. Import data and calculate W's
#########################################
doSpp <- "PSSP"
sppList <- c("ARTR","HECO","POSE","PSSP","allcov","allpts")
dataDir1 <- paste(root,"/driversdata/data/idaho",sep="")
dataDir2 <- paste(root,"/driversdata/data/idaho_modern",sep="")
nonCompLength.s=5 #Number of columns in SppData that are not measures of competitors
# set up distance weights------------------------------------------------
dists <- read.csv(paste(dataDir1,"/speciesdata/IdahoDistanceWeights.csv",sep=""));
dists$allcov <- rowMeans(dists[,1:4])  # for "other" polygons use average of big 4
dists$allpts <- dists$POSE  # set forb dist wts = smallest grass (POSE)
# import old data--------------------------------------------------------
source("fetchGrowthData.r")
D1 <- fetchGdat(doSpp=doSpp,speciesList=sppList,datadir=dataDir1,distWts=dists)
D1$Treatment <- "Control"
# import modern data--------------------------------------------------------
D2 <- fetchGdat(doSpp=doSpp,speciesList=sppList,datadir=dataDir2,distWts=dists)
# merge in treatment data
tmp <- read.csv(paste(dataDir2,"/quad_info.csv",sep=""))
tmp <- tmp[,c("quad","Treatment")]
D2 <- merge(D2,tmp, all.x=T)
# account for removal in baseline years
if(doSpp!="ARTR"){
ii <- which(D2$year>=2011 & D2$Treatment=="No_shrub")
D2$W.ARTR[ii] <- 0
}else{
ii <- which(D2$year>=2011 & D2$Treatment=="No_grass")
D2$W.HECO[ii] <- 0 ; D2$W.POSE[ii] <- 0 ; D2$W.PSSP[ii] <- 0
}
# combine old and modern
allD <- rbind(D1,D2)
rm(D1,D2,tmp)
# merge data on removals at individual level
tmp <- read.csv(paste(dataDir2,"/speciesData/",doSpp,"/",doSpp,"_within_ARTRremovals.csv",sep=""))
tmp <- tmp[,c("quad","year","trackID","inARTR")]
allD<-merge(allD,tmp,all.x=T)
allD$inARTR[is.na(allD$inARTR)] <- 0
# clean up dataset ----------------------------------------------
allD$year[allD$year<2000] <- allD$year[allD$year<2000] + 1900
if(doSpp=="ARTR"){
keep <- which(is.element(allD$Treatment,c("Control","No_grass")))
}else{
keep <- which(is.element(allD$Treatment,c("Control","No_shrub")))
}
allD <- allD[keep,]
# remove outliers (large plants that obviously do not turn into tiny plants)
#########################################
#  2. Fit models
#########################################
library(lme4)
# set up indicator variables
allD$Treatment2 <- allD$Treatment
allD$Treatment2[allD$year>2000] <- "Modern"
allD$Treatment3 <- allD$Treatment
allD$Treatment3[allD$Treatment=="Control" & allD$year>2000] <- "ControlModern"
allD$year <- as.factor(allD$year)
# fit model without W.ARTR
m0 <- lmer(logarea.t1~logarea.t0+ W.HECO + W.POSE + W.PSSP+ W.allcov + W.allpts+
(1|Group)+(logarea.t0|year),data=allD)
# plot residuals vs W.ARTR
plot(allD$W.ARTR[allD$Treatment=="Control"],residuals(m0)[allD$Treatment=="Control"],
xlab="W.ARTR",ylab="Residuals")
abline(lm(residuals(m0)[allD$Treatment=="Control"]~allD$W.ARTR[allD$Treatment=="Control"]),lwd=2)
abline(h=0,lty="dashed",col="grey")
points(allD$W.ARTR[allD$Treatment=="No_shrub"],residuals(m0)[allD$Treatment=="No_shrub"],col="red")
points(0,mean(residuals(m0)[allD$Treatment=="No_shrub"]),pch=16,col="blue")
# call all scripts for removal experiment analysis
rm(list=ls(all=TRUE))
graphics.off();
root=ifelse(.Platform$OS.type=="windows","c:/Repos","~/repos"); # modify as needed
setwd(paste(root,"/ExperimentTests/removals/",sep="")); # modify as needed
setwd("growth")
# PBA March 2016
# call from removal_analysis_wrapper.r
#########################################
#  1. Import data and calculate W's
#########################################
doSpp <- "PSSP"
sppList <- c("ARTR","HECO","POSE","PSSP","allcov","allpts")
dataDir1 <- paste(root,"/driversdata/data/idaho",sep="")
dataDir2 <- paste(root,"/driversdata/data/idaho_modern",sep="")
nonCompLength.s=5 #Number of columns in SppData that are not measures of competitors
# set up distance weights------------------------------------------------
dists <- read.csv(paste(dataDir1,"/speciesdata/IdahoDistanceWeights.csv",sep=""));
dists$allcov <- rowMeans(dists[,1:4])  # for "other" polygons use average of big 4
dists$allpts <- dists$POSE  # set forb dist wts = smallest grass (POSE)
# import old data--------------------------------------------------------
source("fetchGrowthData.r")
D1 <- fetchGdat(doSpp=doSpp,speciesList=sppList,datadir=dataDir1,distWts=dists)
D1$Treatment <- "Control"
# import modern data--------------------------------------------------------
D2 <- fetchGdat(doSpp=doSpp,speciesList=sppList,datadir=dataDir2,distWts=dists)
# merge in treatment data
tmp <- read.csv(paste(dataDir2,"/quad_info.csv",sep=""))
tmp <- tmp[,c("quad","Treatment")]
D2 <- merge(D2,tmp, all.x=T)
# account for removal in baseline years
if(doSpp!="ARTR"){
ii <- which(D2$year>=2011 & D2$Treatment=="No_shrub")
D2$W.ARTR[ii] <- 0
}else{
ii <- which(D2$year>=2011 & D2$Treatment=="No_grass")
D2$W.HECO[ii] <- 0 ; D2$W.POSE[ii] <- 0 ; D2$W.PSSP[ii] <- 0
}
# combine old and modern
allD <- rbind(D1,D2)
rm(D1,D2,tmp)
# merge data on removals at individual level
tmp <- read.csv(paste(dataDir2,"/speciesData/",doSpp,"/",doSpp,"_within_ARTRremovals.csv",sep=""))
tmp <- tmp[,c("quad","year","trackID","inARTR")]
allD<-merge(allD,tmp,all.x=T)
allD$inARTR[is.na(allD$inARTR)] <- 0
# clean up dataset ----------------------------------------------
allD$year[allD$year<2000] <- allD$year[allD$year<2000] + 1900
if(doSpp=="ARTR"){
keep <- which(is.element(allD$Treatment,c("Control","No_grass")))
}else{
keep <- which(is.element(allD$Treatment,c("Control","No_shrub")))
}
allD <- allD[keep,]
# remove outliers (large plants that obviously do not turn into tiny plants)
#########################################
#  2. Fit models
#########################################
library(lme4)
# set up indicator variables
allD$Treatment2 <- allD$Treatment
allD$Treatment2[allD$year>2000] <- "Modern"
allD$Treatment3 <- allD$Treatment
allD$Treatment3[allD$Treatment=="Control" & allD$year>2000] <- "ControlModern"
allD$year <- as.factor(allD$year)
# fit model without W.ARTR
m0 <- lmer(logarea.t1~logarea.t0+ W.HECO + W.POSE + W.PSSP+ W.allcov + W.allpts+
(1|Group)+(logarea.t0|year),data=allD)
# plot residuals vs W.ARTR
plot(allD$W.ARTR[allD$Treatment=="Control"],residuals(m0)[allD$Treatment=="Control"],
xlab="W.ARTR",ylab="Residuals")
abline(lm(residuals(m0)[allD$Treatment=="Control"]~allD$W.ARTR[allD$Treatment=="Control"]),lwd=2)
abline(h=0,lty="dashed",col="grey")
points(allD$W.ARTR[allD$Treatment=="No_shrub"],residuals(m0)[allD$Treatment=="No_shrub"],col="red")
points(0,mean(residuals(m0)[allD$Treatment=="No_shrub"]),pch=16,col="blue")
# plot residuals vs W.ARTR
plot(allD$W.ARTR[allD$Treatment=="Control"],residuals(m0)[allD$Treatment=="Control"],
xlab="W.ARTR",ylab="Residuals",col="darkgrey")
abline(lm(residuals(m0)[allD$Treatment=="Control"]~allD$W.ARTR[allD$Treatment=="Control"]),col="darkgrey",lwd=2)
abline(h=0,lty="dashed",col="black")
points(allD$W.ARTR[allD$Treatment=="No_shrub"],residuals(m0)[allD$Treatment=="No_shrub"],col="red")
points(0,mean(residuals(m0)[allD$Treatment=="No_shrub"]),pch=16,col="blue")
# plot residuals vs W.ARTR
plot(allD$W.ARTR[allD$Treatment=="Control"],residuals(m0)[allD$Treatment=="Control"],
xlab="W.ARTR",ylab="Residuals",col="darkgrey")
abline(lm(residuals(m0)[allD$Treatment=="Control"]~allD$W.ARTR[allD$Treatment=="Control"]),col="black",lwd=2)
abline(h=0,lty="dashed",col="black")
points(allD$W.ARTR[allD$Treatment=="No_shrub"],residuals(m0)[allD$Treatment=="No_shrub"],col="red")
points(0,mean(residuals(m0)[allD$Treatment=="No_shrub"]),pch=16,col="blue")
# plot residuals vs W.ARTR
png("PSSP_resids.png",height=3.5,width=5,units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,3,1,1))
plot(allD$W.ARTR[allD$Treatment=="Control"],residuals(m0)[allD$Treatment=="Control"],
xlab="W.ARTR",ylab="Residuals",col="darkgrey")
abline(lm(residuals(m0)[allD$Treatment=="Control"]~allD$W.ARTR[allD$Treatment=="Control"]),col="black",lwd=2)
abline(h=0,lty="dashed",col="black")
points(allD$W.ARTR[allD$Treatment=="No_shrub"],residuals(m0)[allD$Treatment=="No_shrub"],col="red")
points(0,mean(residuals(m0)[allD$Treatment=="No_shrub"]),pch=16,col="blue")
dev.off()
# PBA March 2016
rm(list=ls(all=TRUE))
graphics.off();
root=ifelse(.Platform$OS.type=="windows","c:/Repos","~/repos"); # modify as needed
setwd(paste(root,"/ExperimentTests/removals/Wdistrib",sep="")); # modify as needed
#########################################
#  1. Import data and calculate W's
#########################################
sppList <- c("ARTR","HECO","POSE","PSSP","allcov","allpts")
dataDir1 <- paste(root,"/driversdata/data/idaho",sep="")
dataDir2 <- paste(root,"/driversdata/data/idaho_modern",sep="")
# set up distance weights
dists <- read.csv(paste(dataDir1,"/speciesdata/IdahoDistanceWeights.csv",sep=""));
dists$allcov <- rowMeans(dists[,1:4])  # for "other" polygons use average of big 4
dists$allpts <- dists$POSE  # set forb dist wts = smallest grass (POSE)
# import old data
setwd("..")
source("survival/fetchSurvData.r")
setwd("Wdistrib")
allD <-list()
for(iSpp in 1:4){
doSpp <- sppList[iSpp]
# get old data
D1 <- fetchSdat(doSpp=doSpp,speciesList=sppList,datadir=dataDir1,distWts=dists)
D1$year <- D1$year+1900
# import modern data
D2 <- fetchSdat(doSpp=doSpp,speciesList=sppList,datadir=dataDir2,distWts=dists)
# combine old and modern
Dall <- rbind(D1,D2)
# merge in treatment data
tmp <- read.csv(paste(dataDir2,"/quad_info.csv",sep=""))
tmp <- tmp[,c("quad","Treatment","Group")]
Dall <- merge(Dall,tmp, all.x=T)
# account for removal in baseline years
#   ii <- which(Dall$year>=2011 & Dall$Treatment=="No_shrub")
#   Dall$W.ARTR[ii] <- 0
#   ii <- which(Dall$year>=2011 & Dall$Treatment=="No_grass")
#   Dall$W.HECO[ii] <- 0 ; Dall$W.POSE[ii] <- 0 ; Dall$W.PSSP[ii] <- 0
allD[[iSpp]] <- Dall[,c("year","Treatment","Group","W.ARTR", "W.HECO","W.POSE","W.PSSP","W.allcov","W.allpts")]
rm(Dall,D1,D2,tmp)
}
names(allD) <- sppList[1:4]
#####################
#  2. Model W's (with help from Giles Hooker)
####################
doSpp <- 3 # look at PSSP
# grab control treatment data
cD <- subset(allD[[doSpp]],Treatment=="Control")
groupI <- which(cD$Group=="E1") # keep track of this for later
Wdat = cD[,4:ncol(cD)]
Wnonzero = Wdat > 0
# grab data from no shrub plots
trtD <- subset(allD[[doSpp]],Treatment=="No_shrub" & year==2011)
Wdat.trt = trtD[,4:ncol(trtD)]
Wnonzero.trt = Wdat.trt > 0
# Brief analysis -- are there correlations among whether there is a zero or not
cor(Wnonzero) # All pretty tiny.
cor(Wnonzero.trt) # pretty strong negative correlation with HECO
# To analyze the rest, we'll look at Box-Cox transformations - these find lambda
# so that X^lambda is as close to normal as possible. boxcox() in R just produces
# a list of lambdas and the corresponding likelihood so we have to do a bit of
# processing
library(MASS)
W.bc = Wdat  # will store transformed data
W.bc.trt = Wdat.trt
for(i in 1:6){
# Select non-zero entries for this column
t.dat = Wdat[Wnonzero[,i],i]
# boxcox
bc = boxcox(t.dat~1,lambda = seq(-2,2,by=0.01),plotit=FALSE)
# optimal lambda
lambda = bc$x[which.max(bc$y)]
# Add into W.bc
W.bc[Wnonzero[,i],i] = t.dat^lambda
# apply same transformation to treatment plots
W.bc.trt[Wnonzero.trt[,i],i] = Wdat.trt[Wnonzero.trt[,i],i]^lambda
}
# compare distributions of control and treatment plot W's
filename <- paste0(sppList[doSpp],"_W_byTrt.pdf")
pdf(filename,height=5,width=8.5)
par(mfrow=c(2,3),tcl=-0.2,mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0))
for(i in 1:6){
pNonZero <-sum(Wnonzero[groupI,i])/length(Wnonzero[groupI,i]) # just E1 control quads
#pNonZero <-sum(Wnonzero[,i])/length(Wnonzero[,i])  # all control quads
pNonZero.trt <- sum(Wnonzero.trt[,i])/length(Wnonzero.trt[,i])
dens <- density(W.bc[which(Wnonzero[,i]==1 & cD$Group=="E1"),i]) # just E1 control quads
#dens <- density(W.bc[Wnonzero[,i],i])  # all control quads
dens.trt <- density(W.bc.trt[Wnonzero.trt[,i],i])
ylims <- c(0,1.2*max(c(dens$y,dens.trt$y)))
xlims <- c(min(c(dens$x,dens.trt$x)),max(c(dens$x,dens.trt$x)))
plot(dens,xlab="",ylab="",,xlim=xlims,ylim=ylims,main=names(cD)[3+i],col="black")
lines(dens.trt,col="red")
legend("topleft",c(paste0("Control, p(W>0)=",round(pNonZero,2)),
paste0("No shrub, p(W>0)=",round(pNonZero.trt,2))),
lty=1,col=c("black","red"),bty="n")
}
mtext("Box-Cox W",side=1,line=0.5,outer=T)
mtext("Density",side=2,line=0.5,outer=T)
dev.off()
getwd()
getwd()setwd("..")
setwd("..")
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
rm("trtTests")
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/growth/POSEgrowth_WvsResids.R', echo=TRUE)
setwd("growth")
source('C:/Repos/ExperimentTests/removals/growth/POSEgrowth_WvsResids.R', echo=TRUE)
#boxplots of residuals by treatment at W.ARTR=0
allD$resids <- residuals(m0)
boxplot(resids~Treatment,data=allD,subset=W.ARTR==0)
summary(lm(resids~Treatment,data=allD,subset=W.ARTR==0))
dev.off()
boxplot(resids~Treatment,data=allD,subset=W.ARTR==0)
# call all scripts for removal experiment analysis
rm(list=ls(all=TRUE))
graphics.off();
root=ifelse(.Platform$OS.type=="windows","c:/Repos","~/repos"); # modify as needed
setwd(paste(root,"/ExperimentTests/removals/",sep="")); # modify as needed
source("treatment_test_figure.r")
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
?par
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
?points
source('C:/Repos/ExperimentTests/removals/treatment_test_figure.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/validate/summarize_validate_sims1step.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/validate/summarize_validate_sims1step.r', echo=TRUE)
?legend
source('C:/Repos/ExperimentTests/removals/validate/summarize_validate_sims1step.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_trends_removals.r', echo=TRUE)
dev.off9)
dev.off()
source('C:/Repos/ExperimentTests/removals/treatment_trends_removals.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_trends_removals.r', echo=TRUE)
source('C:/Repos/ExperimentTests/removals/treatment_trends_removals.r', echo=TRUE)
?par
#1. Average cover treatment and year
png("treatment_trends_cover.png",height=3.5,width=8,units="in",res=400)
par(mfrow=c(1,4),mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0),tcl=-0.2,lwd=1)
# mean cover
for(doSpp in sppList){
tmp.mean<-subset(spp.mean,species==doSpp)
matplot(tmp.mean$year,tmp.mean[,3:5],type="o",xlab="",ylab="",pch=16,lty="solid",
col=myCols,main=doSpp,font.main=4)
if(doSpp==sppList[1]) {
legend("topright",trtLabels,pch=16,lty="solid",col=myCols,bty="n")
mtext("Mean cover (%)",side=2,line=2,outer=F)
}
}
mtext("Year",side=1,line=1,outer=T)
dev.off()
# figures ########################################################################
trtLabels<-substr(x=names(spp.mean)[3:5],start=7,stop=nchar(names(spp.mean)[3:5]))
myCols<-c("black","dodgerblue3","red3")
#1. Average cover treatment and year
png("treatment_trends_cover.png",height=3,width=8,units="in",res=400)
par(mfrow=c(1,4),mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0),tcl=-0.2,lwd=1)
# mean cover
for(doSpp in sppList){
tmp.mean<-subset(spp.mean,species==doSpp)
matplot(tmp.mean$year,tmp.mean[,3:5],type="o",xlab="",ylab="",pch=16,lty="solid",
col=myCols,main=doSpp,font.main=4)
if(doSpp==sppList[1]) {
legend("topright",c("Control","Grass removal","Shrub removal"),pch=16,lty="solid",col=myCols,bty="n")
mtext("Mean cover (%)",side=2,line=2,outer=F)
}
}
mtext("Year",side=1,line=1,outer=T)
dev.off()
#1. Average cover treatment and year
png("treatment_trends_cover.png",height=2.5,width=8,units="in",res=400)
par(mfrow=c(1,4),mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0),tcl=-0.2,lwd=1)
# mean cover
for(doSpp in sppList){
tmp.mean<-subset(spp.mean,species==doSpp)
matplot(tmp.mean$year,tmp.mean[,3:5],type="o",xlab="",ylab="",pch=16,lty="solid",
col=myCols,main=doSpp,font.main=4)
if(doSpp==sppList[1]) {
legend("topright",c("Control","Grass removal","Shrub removal"),pch=16,lty="solid",col=myCols,bty="n")
mtext("Mean cover (%)",side=2,line=2,outer=F)
}
}
mtext("Year",side=1,line=1,outer=T)
dev.off()
#1. Average cover treatment and year
png("treatment_trends_cover.png",height=2.75,width=8,units="in",res=400)
par(mfrow=c(1,4),mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0),tcl=-0.2,lwd=1)
# mean cover
for(doSpp in sppList){
tmp.mean<-subset(spp.mean,species==doSpp)
matplot(tmp.mean$year,tmp.mean[,3:5],type="o",xlab="",ylab="",pch=16,lty="solid",
col=myCols,main=doSpp,font.main=4)
if(doSpp==sppList[1]) {
legend("topright",c("Control","Grass removal","Shrub removal"),pch=16,lty="solid",col=myCols,bty="n")
mtext("Mean cover (%)",side=2,line=2,outer=F)
}
}
mtext("Year",side=1,line=1,outer=T)
dev.off()
source("validate/get_W_functions.r")  # get neighbor distance decay functions
#no treatment effects, all species
init.species <- c(1:4)
tlimit <- 1500
burn.in <- 500
trtEffects=F
source("ipm/IPM-setup.r")
source("ipm/IPM-getEquilibrium.r")
meanCover1 <- meanCover
#no treatment effects, ARTR removal
init.species <- c(2:4)
source("ipm/IPM-getEquilibrium.r")
meanCover2 <- meanCover
# removal treatment effects, ARTR removal
init.species <- c(2:4)
trtEffects=T
source("ipm/IPM-setup.r")
source("ipm/IPM-getEquilibrium.r")
meanCover3 <- meanCover
simResults <- rbind(meanCover1,meanCover2,meanCover3)
write.csv("ipm/simResults.csv",row.names=F)
write.csv(simResults,"ipm/simResults.csv",row.names=F)
rm(list=ls())
if(!exists(simResults)) simResults <- read.csv("ipm/simResults.csv")
if(!exists("simResults")) simResults <- read.csv("ipm/simResults.csv")
png("ipm/IPMsims.png",height=3,width=4.5,units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,3,1,1))
myCol <- c("black","dodgerblue3","red3")
tmp <- barplot(simResults,beside=T,col=myCol,ylab="Cover (%)")
axis(side=1,at=tmp[2,],sppList,cex.axis=0.9)
legend("topright",c("Baseline","Baseline, no ARTR","Removal, no ARTR"),
fill=myCol,bty="n",cex=0.9)
dev.off()
simResults
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,3,1,1))
myCol <- c("black","dodgerblue3","red3")
tmp <- barplot(simResults,beside=T,col=myCol,ylab="Cover (%)")
tmp <- barplot(height=simResults,beside=T,col=myCol,ylab="Cover (%)")
is.data.frame(simResults)
tmp <- barplot(as.matrix(simResults),beside=T,col=myCol,ylab="Cover (%)")
# plot simulation results
if(!exists("simResults")) simResults <- read.csv("ipm/simResults.csv")
png("ipm/IPMsims.png",height=3,width=4.5,units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,3,1,1))
myCol <- c("black","dodgerblue3","red3")
tmp <- barplot(as.matrix(simResults),beside=T,col=myCol,ylab="Cover (%)")
axis(side=1,at=tmp[2,],sppList,cex.axis=0.9)
legend("topright",c("Baseline","Baseline, no ARTR","Removal, no ARTR"),
fill=myCol,bty="n",cex=0.9)
dev.off()
t
sppList <-  c("ARTR","HECO","POSE","PSSP")
# plot simulation results
if(!exists("simResults")) simResults <- read.csv("ipm/simResults.csv")
png("ipm/IPMsims.png",height=3,width=4.5,units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,3,1,1))
myCol <- c("black","dodgerblue3","red3")
tmp <- barplot(as.matrix(simResults),beside=T,col=myCol,ylab="Cover (%)")
axis(side=1,at=tmp[2,],sppList,cex.axis=0.9)
legend("topright",c("Baseline","Baseline, no ARTR","Removal, no ARTR"),
fill=myCol,bty="n",cex=0.9)
dev.off()
tmp <- barplot(as.matrix(simResults),beside=T,col=myCol,ylab="Cover (%)")
axis(side=1,at=tmp[2,],sppList,cex.axis=0.9)
?bnarplot
?barplot
tmp <- barplot(as.matrix(simResults),beside=T,names.arg="",col=myCol,ylab="Cover (%)")
axis(side=1,at=tmp[2,],sppList,cex.axis=0.9)
tmp <- barplot(as.matrix(simResults),beside=T,names.arg=rep("",4),col=myCol,ylab="Cover (%)")
axis(side=1,at=tmp[2,],sppList,cex.axis=0.9)
# plot simulation results
if(!exists("simResults")) simResults <- read.csv("ipm/simResults.csv")
png("ipm/IPMsims.png",height=3,width=4.5,units="in",res=400)
par(tcl=-0.2,mgp=c(2,0.5,0),mar=c(3,3,1,1))
myCol <- c("black","dodgerblue3","red3")
tmp <- barplot(as.matrix(simResults),beside=T,names.arg=rep("",4),col=myCol,ylab="Cover (%)")
axis(side=1,at=tmp[2,],sppList,cex.axis=0.9)
legend("topright",c("Baseline","Baseline, no ARTR","Removal, no ARTR"),
fill=myCol,bty="n",cex=0.9)
dev.off()
simResults
0.85*1.8
0.85*1.75
